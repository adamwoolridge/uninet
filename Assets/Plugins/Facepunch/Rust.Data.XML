<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rust.Data</name>
    </assembly>
    <members>
        <member name="F:ProtoBuf.Entity.createdThisFrame">
            <summary> True if this entity was created this frame also.</summary>
        </member>
        <member name="M:ProtoBuf.Entity.ResetToPool(ProtoBuf.Entity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Entity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Entity.CopyTo(ProtoBuf.Entity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Entity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Entity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Entity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Deserialize(System.Byte[],ProtoBuf.Entity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Deserialize(System.IO.Stream,ProtoBuf.Entity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Entity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Entity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Entity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Entity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Entity.SerializeDelta(System.IO.Stream,ProtoBuf.Entity,ProtoBuf.Entity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Entity.Serialize(System.IO.Stream,ProtoBuf.Entity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Entity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Entity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Entity.SerializeToBytes(ProtoBuf.Entity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Entity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Entity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.ResetToPool(ProtoBuf.BaseNetworkable)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.CopyTo(ProtoBuf.BaseNetworkable)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Deserialize(System.Byte[],ProtoBuf.BaseNetworkable,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Deserialize(System.IO.Stream,ProtoBuf.BaseNetworkable,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseNetworkable,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseNetworkable,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.SerializeDelta(System.IO.Stream,ProtoBuf.BaseNetworkable,ProtoBuf.BaseNetworkable)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.Serialize(System.IO.Stream,ProtoBuf.BaseNetworkable)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.SerializeToBytes(ProtoBuf.BaseNetworkable)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseNetworkable.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseNetworkable)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.ResetToPool(ProtoBuf.BaseEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.CopyTo(ProtoBuf.BaseEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Deserialize(System.Byte[],ProtoBuf.BaseEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Deserialize(System.IO.Stream,ProtoBuf.BaseEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.SerializeDelta(System.IO.Stream,ProtoBuf.BaseEntity,ProtoBuf.BaseEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.Serialize(System.IO.Stream,ProtoBuf.BaseEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.SerializeToBytes(ProtoBuf.BaseEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.ResetToPool(ProtoBuf.BaseCombat)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.CopyTo(ProtoBuf.BaseCombat)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Deserialize(System.Byte[],ProtoBuf.BaseCombat,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Deserialize(System.IO.Stream,ProtoBuf.BaseCombat,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseCombat,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseCombat,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.SerializeDelta(System.IO.Stream,ProtoBuf.BaseCombat,ProtoBuf.BaseCombat)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.Serialize(System.IO.Stream,ProtoBuf.BaseCombat)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.SerializeToBytes(ProtoBuf.BaseCombat)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseCombat.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseCombat)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.ResetToPool(ProtoBuf.BaseNPC)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.CopyTo(ProtoBuf.BaseNPC)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Deserialize(System.Byte[],ProtoBuf.BaseNPC,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Deserialize(System.IO.Stream,ProtoBuf.BaseNPC,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseNPC,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseNPC,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.SerializeDelta(System.IO.Stream,ProtoBuf.BaseNPC,ProtoBuf.BaseNPC)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.Serialize(System.IO.Stream,ProtoBuf.BaseNPC)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.SerializeToBytes(ProtoBuf.BaseNPC)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseNPC.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseNPC)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.ResetToPool(ProtoBuf.EntitySlots)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.CopyTo(ProtoBuf.EntitySlots)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Deserialize(System.Byte[],ProtoBuf.EntitySlots,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Deserialize(System.IO.Stream,ProtoBuf.EntitySlots,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.EntitySlots,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.EntitySlots,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.SerializeDelta(System.IO.Stream,ProtoBuf.EntitySlots,ProtoBuf.EntitySlots)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.Serialize(System.IO.Stream,ProtoBuf.EntitySlots)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.SerializeToBytes(ProtoBuf.EntitySlots)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.EntitySlots.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.EntitySlots)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.ResetToPool(ProtoBuf.BaseResource)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.CopyTo(ProtoBuf.BaseResource)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Deserialize(System.Byte[],ProtoBuf.BaseResource,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Deserialize(System.IO.Stream,ProtoBuf.BaseResource,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseResource,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseResource,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.SerializeDelta(System.IO.Stream,ProtoBuf.BaseResource,ProtoBuf.BaseResource)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.Serialize(System.IO.Stream,ProtoBuf.BaseResource)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.SerializeToBytes(ProtoBuf.BaseResource)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseResource.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseResource)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Environment.ResetToPool(ProtoBuf.Environment)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Environment.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Environment.CopyTo(ProtoBuf.Environment)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Environment.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Environment.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Environment.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Deserialize(System.Byte[],ProtoBuf.Environment,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Deserialize(System.IO.Stream,ProtoBuf.Environment,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Environment.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Environment,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Environment.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Environment,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Environment.SerializeDelta(System.IO.Stream,ProtoBuf.Environment,ProtoBuf.Environment)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Environment.Serialize(System.IO.Stream,ProtoBuf.Environment)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Environment.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Environment.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Environment.SerializeToBytes(ProtoBuf.Environment)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Environment.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Environment)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.ResetToPool(ProtoBuf.Corpse)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.CopyTo(ProtoBuf.Corpse)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Deserialize(System.Byte[],ProtoBuf.Corpse,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Deserialize(System.IO.Stream,ProtoBuf.Corpse,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Corpse,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Corpse,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.SerializeDelta(System.IO.Stream,ProtoBuf.Corpse,ProtoBuf.Corpse)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.Serialize(System.IO.Stream,ProtoBuf.Corpse)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.SerializeToBytes(ProtoBuf.Corpse)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Corpse.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Corpse)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.ResetToPool(ProtoBuf.LootableCorpse.Private)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.CopyTo(ProtoBuf.LootableCorpse.Private)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Deserialize(System.Byte[],ProtoBuf.LootableCorpse.Private,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Deserialize(System.IO.Stream,ProtoBuf.LootableCorpse.Private,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.LootableCorpse.Private,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.LootableCorpse.Private,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.SerializeDelta(System.IO.Stream,ProtoBuf.LootableCorpse.Private,ProtoBuf.LootableCorpse.Private)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.Serialize(System.IO.Stream,ProtoBuf.LootableCorpse.Private)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.SerializeToBytes(ProtoBuf.LootableCorpse.Private)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Private.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.LootableCorpse.Private)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.ResetToPool(ProtoBuf.LootableCorpse)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.CopyTo(ProtoBuf.LootableCorpse)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Deserialize(System.Byte[],ProtoBuf.LootableCorpse,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Deserialize(System.IO.Stream,ProtoBuf.LootableCorpse,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.LootableCorpse,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.LootableCorpse,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.SerializeDelta(System.IO.Stream,ProtoBuf.LootableCorpse,ProtoBuf.LootableCorpse)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.Serialize(System.IO.Stream,ProtoBuf.LootableCorpse)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.SerializeToBytes(ProtoBuf.LootableCorpse)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.LootableCorpse.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.LootableCorpse)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.ResetToPool(ProtoBuf.ParentInfo)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.CopyTo(ProtoBuf.ParentInfo)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Deserialize(System.Byte[],ProtoBuf.ParentInfo,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Deserialize(System.IO.Stream,ProtoBuf.ParentInfo,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ParentInfo,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ParentInfo,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.SerializeDelta(System.IO.Stream,ProtoBuf.ParentInfo,ProtoBuf.ParentInfo)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.Serialize(System.IO.Stream,ProtoBuf.ParentInfo)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.SerializeToBytes(ProtoBuf.ParentInfo)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ParentInfo.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ParentInfo)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ProtoBuf.BuildingBlock.grade">
            <summary>
            <para> Now in BaseResource</para>
            <para> required float				health				= 1;</para>
            </summary>
        </member>
        <member name="F:ProtoBuf.BuildingBlock.stability">
            <summary> Now in StabilityEntity, NEXTWIPE - REMOVE THIS</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.ResetToPool(ProtoBuf.BuildingBlock)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.CopyTo(ProtoBuf.BuildingBlock)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Deserialize(System.Byte[],ProtoBuf.BuildingBlock,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Deserialize(System.IO.Stream,ProtoBuf.BuildingBlock,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BuildingBlock,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BuildingBlock,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.SerializeDelta(System.IO.Stream,ProtoBuf.BuildingBlock,ProtoBuf.BuildingBlock)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.Serialize(System.IO.Stream,ProtoBuf.BuildingBlock)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.SerializeToBytes(ProtoBuf.BuildingBlock)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BuildingBlock.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BuildingBlock)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.ResetToPool(ProtoBuf.WorldItem)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.CopyTo(ProtoBuf.WorldItem)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Deserialize(System.Byte[],ProtoBuf.WorldItem,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Deserialize(System.IO.Stream,ProtoBuf.WorldItem,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.WorldItem,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.WorldItem,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.SerializeDelta(System.IO.Stream,ProtoBuf.WorldItem,ProtoBuf.WorldItem)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.Serialize(System.IO.Stream,ProtoBuf.WorldItem)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.SerializeToBytes(ProtoBuf.WorldItem)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.WorldItem.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.WorldItem)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.ResetToPool(ProtoBuf.KeyLock)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.CopyTo(ProtoBuf.KeyLock)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Deserialize(System.Byte[],ProtoBuf.KeyLock,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Deserialize(System.IO.Stream,ProtoBuf.KeyLock,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.KeyLock,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.KeyLock,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.SerializeDelta(System.IO.Stream,ProtoBuf.KeyLock,ProtoBuf.KeyLock)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.Serialize(System.IO.Stream,ProtoBuf.KeyLock)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.SerializeToBytes(ProtoBuf.KeyLock)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.KeyLock.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.KeyLock)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.ResetToPool(ProtoBuf.CodeLock.Private)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.CopyTo(ProtoBuf.CodeLock.Private)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Deserialize(System.Byte[],ProtoBuf.CodeLock.Private,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Deserialize(System.IO.Stream,ProtoBuf.CodeLock.Private,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.CodeLock.Private,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.CodeLock.Private,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.SerializeDelta(System.IO.Stream,ProtoBuf.CodeLock.Private,ProtoBuf.CodeLock.Private)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.Serialize(System.IO.Stream,ProtoBuf.CodeLock.Private)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.SerializeToBytes(ProtoBuf.CodeLock.Private)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Private.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.CodeLock.Private)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.ResetToPool(ProtoBuf.CodeLock)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.CopyTo(ProtoBuf.CodeLock)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Deserialize(System.Byte[],ProtoBuf.CodeLock,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Deserialize(System.IO.Stream,ProtoBuf.CodeLock,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.CodeLock,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.CodeLock,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.SerializeDelta(System.IO.Stream,ProtoBuf.CodeLock,ProtoBuf.CodeLock)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.Serialize(System.IO.Stream,ProtoBuf.CodeLock)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.SerializeToBytes(ProtoBuf.CodeLock)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.CodeLock.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.CodeLock)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.ResetToPool(ProtoBuf.BuildingPrivilege)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.CopyTo(ProtoBuf.BuildingPrivilege)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Deserialize(System.Byte[],ProtoBuf.BuildingPrivilege,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Deserialize(System.IO.Stream,ProtoBuf.BuildingPrivilege,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BuildingPrivilege,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BuildingPrivilege,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.SerializeDelta(System.IO.Stream,ProtoBuf.BuildingPrivilege,ProtoBuf.BuildingPrivilege)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.Serialize(System.IO.Stream,ProtoBuf.BuildingPrivilege)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.SerializeToBytes(ProtoBuf.BuildingPrivilege)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BuildingPrivilege.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BuildingPrivilege)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.ResetToPool(ProtoBuf.StorageBox)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.CopyTo(ProtoBuf.StorageBox)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Deserialize(System.Byte[],ProtoBuf.StorageBox,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Deserialize(System.IO.Stream,ProtoBuf.StorageBox,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.StorageBox,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.StorageBox,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.SerializeDelta(System.IO.Stream,ProtoBuf.StorageBox,ProtoBuf.StorageBox)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.Serialize(System.IO.Stream,ProtoBuf.StorageBox)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.SerializeToBytes(ProtoBuf.StorageBox)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.StorageBox.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.StorageBox)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.ResetToPool(ProtoBuf.HeldEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.CopyTo(ProtoBuf.HeldEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Deserialize(System.Byte[],ProtoBuf.HeldEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Deserialize(System.IO.Stream,ProtoBuf.HeldEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.HeldEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.HeldEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.SerializeDelta(System.IO.Stream,ProtoBuf.HeldEntity,ProtoBuf.HeldEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.Serialize(System.IO.Stream,ProtoBuf.HeldEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.SerializeToBytes(ProtoBuf.HeldEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.HeldEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.HeldEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Loot.ResetToPool(ProtoBuf.Loot)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Loot.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Loot.CopyTo(ProtoBuf.Loot)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Loot.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Loot.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Loot.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Deserialize(System.Byte[],ProtoBuf.Loot,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Deserialize(System.IO.Stream,ProtoBuf.Loot,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Loot.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Loot,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Loot.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Loot,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Loot.SerializeDelta(System.IO.Stream,ProtoBuf.Loot,ProtoBuf.Loot)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Loot.Serialize(System.IO.Stream,ProtoBuf.Loot)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Loot.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Loot.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Loot.SerializeToBytes(ProtoBuf.Loot)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Loot.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Loot)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.ResetToPool(ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.CopyTo(ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Deserialize(System.Byte[],ProtoBuf.GenericSpawner.SpawnedEnt,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Deserialize(System.IO.Stream,ProtoBuf.GenericSpawner.SpawnedEnt,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.GenericSpawner.SpawnedEnt,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.GenericSpawner.SpawnedEnt,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.SerializeDelta(System.IO.Stream,ProtoBuf.GenericSpawner.SpawnedEnt,ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.Serialize(System.IO.Stream,ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.SerializeToBytes(ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SpawnedEnt.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.GenericSpawner.SpawnedEnt)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.ResetToPool(ProtoBuf.GenericSpawner)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.CopyTo(ProtoBuf.GenericSpawner)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Deserialize(System.Byte[],ProtoBuf.GenericSpawner,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Deserialize(System.IO.Stream,ProtoBuf.GenericSpawner,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.GenericSpawner,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.GenericSpawner,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SerializeDelta(System.IO.Stream,ProtoBuf.GenericSpawner,ProtoBuf.GenericSpawner)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.Serialize(System.IO.Stream,ProtoBuf.GenericSpawner)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SerializeToBytes(ProtoBuf.GenericSpawner)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.GenericSpawner.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.GenericSpawner)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.SleepingBag.Private">
            <summary> NEXTWIPE - REMOVE THIS</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.ResetToPool(ProtoBuf.SleepingBag.Private)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.CopyTo(ProtoBuf.SleepingBag.Private)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Deserialize(System.Byte[],ProtoBuf.SleepingBag.Private,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Deserialize(System.IO.Stream,ProtoBuf.SleepingBag.Private,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.SleepingBag.Private,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.SleepingBag.Private,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.SerializeDelta(System.IO.Stream,ProtoBuf.SleepingBag.Private,ProtoBuf.SleepingBag.Private)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.Serialize(System.IO.Stream,ProtoBuf.SleepingBag.Private)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.SerializeToBytes(ProtoBuf.SleepingBag.Private)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Private.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.SleepingBag.Private)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.ResetToPool(ProtoBuf.SleepingBag)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.CopyTo(ProtoBuf.SleepingBag)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Deserialize(System.Byte[],ProtoBuf.SleepingBag,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Deserialize(System.IO.Stream,ProtoBuf.SleepingBag,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.SleepingBag,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.SleepingBag,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.SerializeDelta(System.IO.Stream,ProtoBuf.SleepingBag,ProtoBuf.SleepingBag)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.Serialize(System.IO.Stream,ProtoBuf.SleepingBag)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.SerializeToBytes(ProtoBuf.SleepingBag)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.SleepingBag.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.SleepingBag)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.ResetToPool(ProtoBuf.Magazine)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.CopyTo(ProtoBuf.Magazine)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Deserialize(System.Byte[],ProtoBuf.Magazine,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Deserialize(System.IO.Stream,ProtoBuf.Magazine,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Magazine,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Magazine,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.SerializeDelta(System.IO.Stream,ProtoBuf.Magazine,ProtoBuf.Magazine)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.Serialize(System.IO.Stream,ProtoBuf.Magazine)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.SerializeToBytes(ProtoBuf.Magazine)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Magazine.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Magazine)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.ResetToPool(ProtoBuf.BaseProjectile)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.CopyTo(ProtoBuf.BaseProjectile)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Deserialize(System.Byte[],ProtoBuf.BaseProjectile,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Deserialize(System.IO.Stream,ProtoBuf.BaseProjectile,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseProjectile,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BaseProjectile,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.SerializeDelta(System.IO.Stream,ProtoBuf.BaseProjectile,ProtoBuf.BaseProjectile)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.Serialize(System.IO.Stream,ProtoBuf.BaseProjectile)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.SerializeToBytes(ProtoBuf.BaseProjectile)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BaseProjectile.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BaseProjectile)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ProtoBuf.Sign.imageid">
            <summary>
            <para>optional string text			= 1;</para>
            <para>optional uint64 imageid		= 2;</para>
            </summary>
        </member>
        <member name="M:ProtoBuf.Sign.ResetToPool(ProtoBuf.Sign)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Sign.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Sign.CopyTo(ProtoBuf.Sign)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Sign.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Sign.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Sign.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Deserialize(System.Byte[],ProtoBuf.Sign,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Deserialize(System.IO.Stream,ProtoBuf.Sign,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Sign.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Sign,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Sign.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Sign,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Sign.SerializeDelta(System.IO.Stream,ProtoBuf.Sign,ProtoBuf.Sign)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Sign.Serialize(System.IO.Stream,ProtoBuf.Sign)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Sign.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Sign.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Sign.SerializeToBytes(ProtoBuf.Sign)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Sign.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Sign)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.ResetToPool(ProtoBuf.MapEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.CopyTo(ProtoBuf.MapEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Deserialize(System.Byte[],ProtoBuf.MapEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Deserialize(System.IO.Stream,ProtoBuf.MapEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.MapEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.MapEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.SerializeDelta(System.IO.Stream,ProtoBuf.MapEntity,ProtoBuf.MapEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.Serialize(System.IO.Stream,ProtoBuf.MapEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.SerializeToBytes(ProtoBuf.MapEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.MapEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.MapEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.ResetToPool(ProtoBuf.ResearchTable)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.CopyTo(ProtoBuf.ResearchTable)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Deserialize(System.Byte[],ProtoBuf.ResearchTable,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Deserialize(System.IO.Stream,ProtoBuf.ResearchTable,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ResearchTable,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ResearchTable,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.SerializeDelta(System.IO.Stream,ProtoBuf.ResearchTable,ProtoBuf.ResearchTable)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.Serialize(System.IO.Stream,ProtoBuf.ResearchTable)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.SerializeToBytes(ProtoBuf.ResearchTable)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ResearchTable.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ResearchTable)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.ResetToPool(ProtoBuf.DudExplosive)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.CopyTo(ProtoBuf.DudExplosive)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Deserialize(System.Byte[],ProtoBuf.DudExplosive,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Deserialize(System.IO.Stream,ProtoBuf.DudExplosive,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.DudExplosive,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.DudExplosive,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.SerializeDelta(System.IO.Stream,ProtoBuf.DudExplosive,ProtoBuf.DudExplosive)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.Serialize(System.IO.Stream,ProtoBuf.DudExplosive)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.SerializeToBytes(ProtoBuf.DudExplosive)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.DudExplosive.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.DudExplosive)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.ResetToPool(ProtoBuf.ResourceExtractor)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.CopyTo(ProtoBuf.ResourceExtractor)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Deserialize(System.Byte[],ProtoBuf.ResourceExtractor,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Deserialize(System.IO.Stream,ProtoBuf.ResourceExtractor,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ResourceExtractor,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ResourceExtractor,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.SerializeDelta(System.IO.Stream,ProtoBuf.ResourceExtractor,ProtoBuf.ResourceExtractor)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.Serialize(System.IO.Stream,ProtoBuf.ResourceExtractor)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.SerializeToBytes(ProtoBuf.ResourceExtractor)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ResourceExtractor.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ResourceExtractor)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.ResetToPool(ProtoBuf.MiningQuarry)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.CopyTo(ProtoBuf.MiningQuarry)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Deserialize(System.Byte[],ProtoBuf.MiningQuarry,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Deserialize(System.IO.Stream,ProtoBuf.MiningQuarry,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.MiningQuarry,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.MiningQuarry,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.SerializeDelta(System.IO.Stream,ProtoBuf.MiningQuarry,ProtoBuf.MiningQuarry)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.Serialize(System.IO.Stream,ProtoBuf.MiningQuarry)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.SerializeToBytes(ProtoBuf.MiningQuarry)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.MiningQuarry.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.MiningQuarry)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.ResetToPool(ProtoBuf.PlantEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.CopyTo(ProtoBuf.PlantEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Deserialize(System.Byte[],ProtoBuf.PlantEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Deserialize(System.IO.Stream,ProtoBuf.PlantEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlantEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlantEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.SerializeDelta(System.IO.Stream,ProtoBuf.PlantEntity,ProtoBuf.PlantEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.Serialize(System.IO.Stream,ProtoBuf.PlantEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.SerializeToBytes(ProtoBuf.PlantEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlantEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlantEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.ResetToPool(ProtoBuf.Landmine)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.CopyTo(ProtoBuf.Landmine)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Deserialize(System.Byte[],ProtoBuf.Landmine,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Deserialize(System.IO.Stream,ProtoBuf.Landmine,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Landmine,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Landmine,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.SerializeDelta(System.IO.Stream,ProtoBuf.Landmine,ProtoBuf.Landmine)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.Serialize(System.IO.Stream,ProtoBuf.Landmine)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.SerializeToBytes(ProtoBuf.Landmine)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Landmine.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Landmine)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.ResetToPool(ProtoBuf.Helicopter)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.CopyTo(ProtoBuf.Helicopter)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Deserialize(System.Byte[],ProtoBuf.Helicopter,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Deserialize(System.IO.Stream,ProtoBuf.Helicopter,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Helicopter,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Helicopter,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.SerializeDelta(System.IO.Stream,ProtoBuf.Helicopter,ProtoBuf.Helicopter)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.Serialize(System.IO.Stream,ProtoBuf.Helicopter)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.SerializeToBytes(ProtoBuf.Helicopter)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Helicopter.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Helicopter)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.ResetToPool(ProtoBuf.AutoTurret)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.CopyTo(ProtoBuf.AutoTurret)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Deserialize(System.Byte[],ProtoBuf.AutoTurret,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Deserialize(System.IO.Stream,ProtoBuf.AutoTurret,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.AutoTurret,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.AutoTurret,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.SerializeDelta(System.IO.Stream,ProtoBuf.AutoTurret,ProtoBuf.AutoTurret)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.Serialize(System.IO.Stream,ProtoBuf.AutoTurret)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.SerializeToBytes(ProtoBuf.AutoTurret)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.AutoTurret.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.AutoTurret)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.ResetToPool(ProtoBuf.SphereEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.CopyTo(ProtoBuf.SphereEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Deserialize(System.Byte[],ProtoBuf.SphereEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Deserialize(System.IO.Stream,ProtoBuf.SphereEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.SphereEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.SphereEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.SerializeDelta(System.IO.Stream,ProtoBuf.SphereEntity,ProtoBuf.SphereEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.Serialize(System.IO.Stream,ProtoBuf.SphereEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.SerializeToBytes(ProtoBuf.SphereEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.SphereEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.SphereEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.ResetToPool(ProtoBuf.StabilityEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.CopyTo(ProtoBuf.StabilityEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Deserialize(System.Byte[],ProtoBuf.StabilityEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Deserialize(System.IO.Stream,ProtoBuf.StabilityEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.StabilityEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.StabilityEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.SerializeDelta(System.IO.Stream,ProtoBuf.StabilityEntity,ProtoBuf.StabilityEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.Serialize(System.IO.Stream,ProtoBuf.StabilityEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.SerializeToBytes(ProtoBuf.StabilityEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.StabilityEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.StabilityEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.ResetToPool(ProtoBuf.OwnerInfo)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.CopyTo(ProtoBuf.OwnerInfo)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Deserialize(System.Byte[],ProtoBuf.OwnerInfo,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Deserialize(System.IO.Stream,ProtoBuf.OwnerInfo,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.OwnerInfo,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.OwnerInfo,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.SerializeDelta(System.IO.Stream,ProtoBuf.OwnerInfo,ProtoBuf.OwnerInfo)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.Serialize(System.IO.Stream,ProtoBuf.OwnerInfo)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.SerializeToBytes(ProtoBuf.OwnerInfo)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.OwnerInfo.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.OwnerInfo)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.ResetToPool(ProtoBuf.DecayEntity)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.CopyTo(ProtoBuf.DecayEntity)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Deserialize(System.Byte[],ProtoBuf.DecayEntity,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Deserialize(System.IO.Stream,ProtoBuf.DecayEntity,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.DecayEntity,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.DecayEntity,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.SerializeDelta(System.IO.Stream,ProtoBuf.DecayEntity,ProtoBuf.DecayEntity)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.Serialize(System.IO.Stream,ProtoBuf.DecayEntity)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.SerializeToBytes(ProtoBuf.DecayEntity)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.DecayEntity.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.DecayEntity)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.ResetToPool(ProtoBuf.Spawnable)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.CopyTo(ProtoBuf.Spawnable)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Deserialize(System.Byte[],ProtoBuf.Spawnable,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Deserialize(System.IO.Stream,ProtoBuf.Spawnable,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Spawnable,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Spawnable,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.SerializeDelta(System.IO.Stream,ProtoBuf.Spawnable,ProtoBuf.Spawnable)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.Serialize(System.IO.Stream,ProtoBuf.Spawnable)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.SerializeToBytes(ProtoBuf.Spawnable)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Spawnable.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Spawnable)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.ResetToPool(ProtoBuf.ItemContainer)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.CopyTo(ProtoBuf.ItemContainer)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Deserialize(System.Byte[],ProtoBuf.ItemContainer,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Deserialize(System.IO.Stream,ProtoBuf.ItemContainer,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ItemContainer,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ItemContainer,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.SerializeDelta(System.IO.Stream,ProtoBuf.ItemContainer,ProtoBuf.ItemContainer)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.Serialize(System.IO.Stream,ProtoBuf.ItemContainer)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.SerializeToBytes(ProtoBuf.ItemContainer)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ItemContainer.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ItemContainer)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.ResetToPool(ProtoBuf.OwnerFraction)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.CopyTo(ProtoBuf.OwnerFraction)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Deserialize(System.Byte[],ProtoBuf.OwnerFraction,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Deserialize(System.IO.Stream,ProtoBuf.OwnerFraction,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.OwnerFraction,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.OwnerFraction,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.SerializeDelta(System.IO.Stream,ProtoBuf.OwnerFraction,ProtoBuf.OwnerFraction)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.Serialize(System.IO.Stream,ProtoBuf.OwnerFraction)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.SerializeToBytes(ProtoBuf.OwnerFraction)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.OwnerFraction.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.OwnerFraction)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ProtoBuf.Item.slot">
            <summary> id of contained item</summary>
        </member>
        <member name="F:ProtoBuf.Item.amount">
            <summary> which slot we're in</summary>
        </member>
        <member name="F:ProtoBuf.Item.flags">
            <summary> Ammo, number of resources etc</summary>
        </member>
        <member name="F:ProtoBuf.Item.removetime">
            <summary> Misc flags</summary>
        </member>
        <member name="F:ProtoBuf.Item.locktime">
            <summary> will be removed at this time</summary>
        </member>
        <member name="F:ProtoBuf.Item.worldEntity">
            <summary> will be locked until this time</summary>
        </member>
        <member name="F:ProtoBuf.Item.instanceData">
            <summary> The dropped entity associated with this item</summary>
        </member>
        <member name="F:ProtoBuf.Item.heldEntity">
            <summary> Multi-use</summary>
        </member>
        <member name="F:ProtoBuf.Item.conditionData">
            <summary> The usable entity associated with this item</summary>
        </member>
        <member name="F:ProtoBuf.Item.name">
            <summary>list of the 'owners'</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.ResetToPool(ProtoBuf.Item.InstanceData)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.CopyTo(ProtoBuf.Item.InstanceData)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Deserialize(System.Byte[],ProtoBuf.Item.InstanceData,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Deserialize(System.IO.Stream,ProtoBuf.Item.InstanceData,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Item.InstanceData,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Item.InstanceData,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.SerializeDelta(System.IO.Stream,ProtoBuf.Item.InstanceData,ProtoBuf.Item.InstanceData)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.Serialize(System.IO.Stream,ProtoBuf.Item.InstanceData)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.SerializeToBytes(ProtoBuf.Item.InstanceData)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Item.InstanceData.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Item.InstanceData)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.ResetToPool(ProtoBuf.Item.ConditionData)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.CopyTo(ProtoBuf.Item.ConditionData)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Deserialize(System.Byte[],ProtoBuf.Item.ConditionData,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Deserialize(System.IO.Stream,ProtoBuf.Item.ConditionData,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Item.ConditionData,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Item.ConditionData,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.SerializeDelta(System.IO.Stream,ProtoBuf.Item.ConditionData,ProtoBuf.Item.ConditionData)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.Serialize(System.IO.Stream,ProtoBuf.Item.ConditionData)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.SerializeToBytes(ProtoBuf.Item.ConditionData)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Item.ConditionData.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Item.ConditionData)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.Item.ResetToPool(ProtoBuf.Item)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Item.CopyTo(ProtoBuf.Item)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Item.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Item.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Item.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Item.Deserialize(System.Byte[],ProtoBuf.Item,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Item.Deserialize(System.IO.Stream,ProtoBuf.Item,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Item,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Item,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Item.SerializeDelta(System.IO.Stream,ProtoBuf.Item,ProtoBuf.Item)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Item.Serialize(System.IO.Stream,ProtoBuf.Item)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Item.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Item.SerializeToBytes(ProtoBuf.Item)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Item.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Item)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ProtoBuf.BasePlayer.persistantData">
            <summary> Only gets sent to the local player and is not saved on the server</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.ResetToPool(ProtoBuf.BasePlayer)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.CopyTo(ProtoBuf.BasePlayer)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Deserialize(System.Byte[],ProtoBuf.BasePlayer,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Deserialize(System.IO.Stream,ProtoBuf.BasePlayer,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.BasePlayer,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.BasePlayer,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.SerializeDelta(System.IO.Stream,ProtoBuf.BasePlayer,ProtoBuf.BasePlayer)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.Serialize(System.IO.Stream,ProtoBuf.BasePlayer)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.SerializeToBytes(ProtoBuf.BasePlayer)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.BasePlayer.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.BasePlayer)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.ResetToPool(ProtoBuf.PlayerMetabolism)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.CopyTo(ProtoBuf.PlayerMetabolism)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Deserialize(System.Byte[],ProtoBuf.PlayerMetabolism,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Deserialize(System.IO.Stream,ProtoBuf.PlayerMetabolism,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerMetabolism,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerMetabolism,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerMetabolism,ProtoBuf.PlayerMetabolism)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.Serialize(System.IO.Stream,ProtoBuf.PlayerMetabolism)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.SerializeToBytes(ProtoBuf.PlayerMetabolism)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerMetabolism.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerMetabolism)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.ResetToPool(ProtoBuf.PlayerInventory)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.CopyTo(ProtoBuf.PlayerInventory)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Deserialize(System.Byte[],ProtoBuf.PlayerInventory,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Deserialize(System.IO.Stream,ProtoBuf.PlayerInventory,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerInventory,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerInventory,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerInventory,ProtoBuf.PlayerInventory)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.Serialize(System.IO.Stream,ProtoBuf.PlayerInventory)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.SerializeToBytes(ProtoBuf.PlayerInventory)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerInventory.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerInventory)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.PersistantPlayer">
            <summary> Persistant player data</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.ResetToPool(ProtoBuf.PersistantPlayer)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.CopyTo(ProtoBuf.PersistantPlayer)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Deserialize(System.Byte[],ProtoBuf.PersistantPlayer,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Deserialize(System.IO.Stream,ProtoBuf.PersistantPlayer,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PersistantPlayer,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PersistantPlayer,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.SerializeDelta(System.IO.Stream,ProtoBuf.PersistantPlayer,ProtoBuf.PersistantPlayer)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.Serialize(System.IO.Stream,ProtoBuf.PersistantPlayer)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.SerializeToBytes(ProtoBuf.PersistantPlayer)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PersistantPlayer.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PersistantPlayer)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ProtoBuf.PlayerLifeStory.secondsAlive">
            <summary> Generic Stats</summary>
        </member>
        <member name="T:ProtoBuf.PlayerLifeStory.DeathInfo">
            <summary> Death</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.ResetToPool(ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.CopyTo(ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Deserialize(System.Byte[],ProtoBuf.PlayerLifeStory.DeathInfo,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Deserialize(System.IO.Stream,ProtoBuf.PlayerLifeStory.DeathInfo,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerLifeStory.DeathInfo,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerLifeStory.DeathInfo,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerLifeStory.DeathInfo,ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.Serialize(System.IO.Stream,ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.SerializeToBytes(ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeathInfo.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerLifeStory.DeathInfo)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.ResetToPool(ProtoBuf.PlayerLifeStory)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.CopyTo(ProtoBuf.PlayerLifeStory)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Deserialize(System.Byte[],ProtoBuf.PlayerLifeStory,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Deserialize(System.IO.Stream,ProtoBuf.PlayerLifeStory,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerLifeStory,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerLifeStory,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerLifeStory,ProtoBuf.PlayerLifeStory)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.Serialize(System.IO.Stream,ProtoBuf.PlayerLifeStory)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.SerializeToBytes(ProtoBuf.PlayerLifeStory)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerLifeStory.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerLifeStory)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.ResetToPool(ProtoBuf.PlayerNameID)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.CopyTo(ProtoBuf.PlayerNameID)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Deserialize(System.Byte[],ProtoBuf.PlayerNameID,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Deserialize(System.IO.Stream,ProtoBuf.PlayerNameID,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerNameID,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerNameID,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerNameID,ProtoBuf.PlayerNameID)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.Serialize(System.IO.Stream,ProtoBuf.PlayerNameID)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.SerializeToBytes(ProtoBuf.PlayerNameID)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerNameID.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerNameID)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.Approval">
            <summary>
            <para> A message from server to client</para>
            <para> which is approving the client to join</para>
            </summary>
        </member>
        <member name="M:ProtoBuf.Approval.ResetToPool(ProtoBuf.Approval)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Approval.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Approval.CopyTo(ProtoBuf.Approval)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Approval.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Approval.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Approval.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Deserialize(System.Byte[],ProtoBuf.Approval,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Deserialize(System.IO.Stream,ProtoBuf.Approval,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Approval.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Approval,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Approval.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Approval,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Approval.SerializeDelta(System.IO.Stream,ProtoBuf.Approval,ProtoBuf.Approval)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Approval.Serialize(System.IO.Stream,ProtoBuf.Approval)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Approval.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Approval.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Approval.SerializeToBytes(ProtoBuf.Approval)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Approval.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Approval)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.ResetToPool(ProtoBuf.UpdateItemContainer)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.CopyTo(ProtoBuf.UpdateItemContainer)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Deserialize(System.Byte[],ProtoBuf.UpdateItemContainer,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Deserialize(System.IO.Stream,ProtoBuf.UpdateItemContainer,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.UpdateItemContainer,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.UpdateItemContainer,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.SerializeDelta(System.IO.Stream,ProtoBuf.UpdateItemContainer,ProtoBuf.UpdateItemContainer)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.Serialize(System.IO.Stream,ProtoBuf.UpdateItemContainer)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.SerializeToBytes(ProtoBuf.UpdateItemContainer)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItemContainer.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.UpdateItemContainer)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.ResetToPool(ProtoBuf.PlayerUpdateLoot)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.CopyTo(ProtoBuf.PlayerUpdateLoot)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Deserialize(System.Byte[],ProtoBuf.PlayerUpdateLoot,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Deserialize(System.IO.Stream,ProtoBuf.PlayerUpdateLoot,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerUpdateLoot,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerUpdateLoot,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerUpdateLoot,ProtoBuf.PlayerUpdateLoot)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.Serialize(System.IO.Stream,ProtoBuf.PlayerUpdateLoot)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.SerializeToBytes(ProtoBuf.PlayerUpdateLoot)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerUpdateLoot.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerUpdateLoot)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.ResetToPool(ProtoBuf.UpdateItem)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.CopyTo(ProtoBuf.UpdateItem)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Deserialize(System.Byte[],ProtoBuf.UpdateItem,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Deserialize(System.IO.Stream,ProtoBuf.UpdateItem,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.UpdateItem,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.UpdateItem,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.SerializeDelta(System.IO.Stream,ProtoBuf.UpdateItem,ProtoBuf.UpdateItem)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.Serialize(System.IO.Stream,ProtoBuf.UpdateItem)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.SerializeToBytes(ProtoBuf.UpdateItem)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.UpdateItem.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.UpdateItem)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.TakeDamage">
            <summary> Take Damage Indicator</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.ResetToPool(ProtoBuf.TakeDamage)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.CopyTo(ProtoBuf.TakeDamage)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Deserialize(System.Byte[],ProtoBuf.TakeDamage,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Deserialize(System.IO.Stream,ProtoBuf.TakeDamage,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.TakeDamage,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.TakeDamage,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.SerializeDelta(System.IO.Stream,ProtoBuf.TakeDamage,ProtoBuf.TakeDamage)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.Serialize(System.IO.Stream,ProtoBuf.TakeDamage)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.SerializeToBytes(ProtoBuf.TakeDamage)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.TakeDamage.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.TakeDamage)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.EntityList">
            <summary> A snapshot</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.ResetToPool(ProtoBuf.EntityList)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.CopyTo(ProtoBuf.EntityList)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Deserialize(System.Byte[],ProtoBuf.EntityList,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Deserialize(System.IO.Stream,ProtoBuf.EntityList,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.EntityList,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.EntityList,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.SerializeDelta(System.IO.Stream,ProtoBuf.EntityList,ProtoBuf.EntityList)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.Serialize(System.IO.Stream,ProtoBuf.EntityList)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.SerializeToBytes(ProtoBuf.EntityList)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.EntityList.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.EntityList)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.ResetToPool(ProtoBuf.CreateBuilding)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.CopyTo(ProtoBuf.CreateBuilding)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Deserialize(System.Byte[],ProtoBuf.CreateBuilding,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Deserialize(System.IO.Stream,ProtoBuf.CreateBuilding,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.CreateBuilding,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.CreateBuilding,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.SerializeDelta(System.IO.Stream,ProtoBuf.CreateBuilding,ProtoBuf.CreateBuilding)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.Serialize(System.IO.Stream,ProtoBuf.CreateBuilding)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.SerializeToBytes(ProtoBuf.CreateBuilding)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.CreateBuilding.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.CreateBuilding)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.Attack">
            <summary> An attack message</summary>
        </member>
        <member name="M:ProtoBuf.Attack.ResetToPool(ProtoBuf.Attack)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Attack.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.Attack.CopyTo(ProtoBuf.Attack)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Attack.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Attack.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.Attack.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Deserialize(System.Byte[],ProtoBuf.Attack,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Deserialize(System.IO.Stream,ProtoBuf.Attack,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Attack.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.Attack,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Attack.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.Attack,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.Attack.SerializeDelta(System.IO.Stream,ProtoBuf.Attack,ProtoBuf.Attack)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.Attack.Serialize(System.IO.Stream,ProtoBuf.Attack)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.Attack.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.Attack.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.Attack.SerializeToBytes(ProtoBuf.Attack)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.Attack.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.Attack)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.ResetToPool(ProtoBuf.PlayerAttack)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.CopyTo(ProtoBuf.PlayerAttack)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Deserialize(System.Byte[],ProtoBuf.PlayerAttack,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Deserialize(System.IO.Stream,ProtoBuf.PlayerAttack,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerAttack,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerAttack,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerAttack,ProtoBuf.PlayerAttack)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.Serialize(System.IO.Stream,ProtoBuf.PlayerAttack)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.SerializeToBytes(ProtoBuf.PlayerAttack)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerAttack.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerAttack)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.ResetToPool(ProtoBuf.PlayerProjectileAttack)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.CopyTo(ProtoBuf.PlayerProjectileAttack)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Deserialize(System.Byte[],ProtoBuf.PlayerProjectileAttack,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Deserialize(System.IO.Stream,ProtoBuf.PlayerProjectileAttack,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerProjectileAttack,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerProjectileAttack,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerProjectileAttack,ProtoBuf.PlayerProjectileAttack)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.Serialize(System.IO.Stream,ProtoBuf.PlayerProjectileAttack)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.SerializeToBytes(ProtoBuf.PlayerProjectileAttack)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileAttack.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerProjectileAttack)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.ResetToPool(ProtoBuf.PlayerProjectileRicochet)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.CopyTo(ProtoBuf.PlayerProjectileRicochet)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Deserialize(System.Byte[],ProtoBuf.PlayerProjectileRicochet,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Deserialize(System.IO.Stream,ProtoBuf.PlayerProjectileRicochet,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerProjectileRicochet,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.PlayerProjectileRicochet,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.SerializeDelta(System.IO.Stream,ProtoBuf.PlayerProjectileRicochet,ProtoBuf.PlayerProjectileRicochet)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.Serialize(System.IO.Stream,ProtoBuf.PlayerProjectileRicochet)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.SerializeToBytes(ProtoBuf.PlayerProjectileRicochet)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.PlayerProjectileRicochet.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.PlayerProjectileRicochet)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.ResetToPool(ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.CopyTo(ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Deserialize(System.Byte[],ProtoBuf.ProjectileShoot.Projectile,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Deserialize(System.IO.Stream,ProtoBuf.ProjectileShoot.Projectile,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ProjectileShoot.Projectile,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ProjectileShoot.Projectile,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.SerializeDelta(System.IO.Stream,ProtoBuf.ProjectileShoot.Projectile,ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.Serialize(System.IO.Stream,ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.SerializeToBytes(ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Projectile.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ProjectileShoot.Projectile)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.ResetToPool(ProtoBuf.ProjectileShoot)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.CopyTo(ProtoBuf.ProjectileShoot)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Deserialize(System.Byte[],ProtoBuf.ProjectileShoot,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Deserialize(System.IO.Stream,ProtoBuf.ProjectileShoot,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ProjectileShoot,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ProjectileShoot,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.SerializeDelta(System.IO.Stream,ProtoBuf.ProjectileShoot,ProtoBuf.ProjectileShoot)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.Serialize(System.IO.Stream,ProtoBuf.ProjectileShoot)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.SerializeToBytes(ProtoBuf.ProjectileShoot)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ProjectileShoot.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ProjectileShoot)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.ModuleMessage">
            <summary> A message to an item module</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.ResetToPool(ProtoBuf.ModuleMessage)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.CopyTo(ProtoBuf.ModuleMessage)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Deserialize(System.Byte[],ProtoBuf.ModuleMessage,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Deserialize(System.IO.Stream,ProtoBuf.ModuleMessage,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ModuleMessage,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ModuleMessage,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.SerializeDelta(System.IO.Stream,ProtoBuf.ModuleMessage,ProtoBuf.ModuleMessage)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.Serialize(System.IO.Stream,ProtoBuf.ModuleMessage)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.SerializeToBytes(ProtoBuf.ModuleMessage)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ModuleMessage.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ModuleMessage)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:ProtoBuf.RespawnInformation">
            <summary> Send on player death to let them choose where to spawn</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.ResetToPool(ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.CopyTo(ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Deserialize(System.Byte[],ProtoBuf.RespawnInformation.SpawnOptions,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Deserialize(System.IO.Stream,ProtoBuf.RespawnInformation.SpawnOptions,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.RespawnInformation.SpawnOptions,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.RespawnInformation.SpawnOptions,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.SerializeDelta(System.IO.Stream,ProtoBuf.RespawnInformation.SpawnOptions,ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.Serialize(System.IO.Stream,ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.SerializeToBytes(ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SpawnOptions.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.RespawnInformation.SpawnOptions)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.ResetToPool(ProtoBuf.RespawnInformation)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.CopyTo(ProtoBuf.RespawnInformation)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Deserialize(System.Byte[],ProtoBuf.RespawnInformation,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Deserialize(System.IO.Stream,ProtoBuf.RespawnInformation,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.RespawnInformation,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.RespawnInformation,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SerializeDelta(System.IO.Stream,ProtoBuf.RespawnInformation,ProtoBuf.RespawnInformation)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.Serialize(System.IO.Stream,ProtoBuf.RespawnInformation)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SerializeToBytes(ProtoBuf.RespawnInformation)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.RespawnInformation.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.RespawnInformation)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.ResetToPool(ProtoBuf.ClientReady.ClientInfo)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.CopyTo(ProtoBuf.ClientReady.ClientInfo)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Deserialize(System.Byte[],ProtoBuf.ClientReady.ClientInfo,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Deserialize(System.IO.Stream,ProtoBuf.ClientReady.ClientInfo,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ClientReady.ClientInfo,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ClientReady.ClientInfo,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.SerializeDelta(System.IO.Stream,ProtoBuf.ClientReady.ClientInfo,ProtoBuf.ClientReady.ClientInfo)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.Serialize(System.IO.Stream,ProtoBuf.ClientReady.ClientInfo)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.SerializeToBytes(ProtoBuf.ClientReady.ClientInfo)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ClientInfo.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ClientReady.ClientInfo)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ResetToPool(ProtoBuf.ClientReady)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.CopyTo(ProtoBuf.ClientReady)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Deserialize(System.Byte[],ProtoBuf.ClientReady,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Deserialize(System.IO.Stream,ProtoBuf.ClientReady,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.ClientReady,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.ClientReady,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.SerializeDelta(System.IO.Stream,ProtoBuf.ClientReady,ProtoBuf.ClientReady)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.Serialize(System.IO.Stream,ProtoBuf.ClientReady)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.SerializeToBytes(ProtoBuf.ClientReady)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.ClientReady.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.ClientReady)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.ResetToPool(ProtoBuf.XpContainer.Value)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.CopyTo(ProtoBuf.XpContainer.Value)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Deserialize(System.Byte[],ProtoBuf.XpContainer.Value,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Deserialize(System.IO.Stream,ProtoBuf.XpContainer.Value,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.XpContainer.Value,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.XpContainer.Value,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.SerializeDelta(System.IO.Stream,ProtoBuf.XpContainer.Value,ProtoBuf.XpContainer.Value)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.Serialize(System.IO.Stream,ProtoBuf.XpContainer.Value)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.SerializeToBytes(ProtoBuf.XpContainer.Value)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Value.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.XpContainer.Value)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.ResetToPool(ProtoBuf.XpContainer)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.CopyTo(ProtoBuf.XpContainer)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Deserialize(System.Byte[],ProtoBuf.XpContainer,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Deserialize(System.IO.Stream,ProtoBuf.XpContainer,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.DeserializeLengthDelimited(System.IO.Stream,ProtoBuf.XpContainer,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.DeserializeLength(System.IO.Stream,System.Int32,ProtoBuf.XpContainer,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.SerializeDelta(System.IO.Stream,ProtoBuf.XpContainer,ProtoBuf.XpContainer)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.Serialize(System.IO.Stream,ProtoBuf.XpContainer)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.SerializeToBytes(ProtoBuf.XpContainer)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ProtoBuf.XpContainer.SerializeLengthDelimited(System.IO.Stream,ProtoBuf.XpContainer)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.ResetToPool(UnityEngine.Vector3)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.Deserialize(System.Byte[],UnityEngine.Vector3@,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.Deserialize(System.IO.Stream,UnityEngine.Vector3@,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.DeserializeLengthDelimited(System.IO.Stream,UnityEngine.Vector3@,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.DeserializeLength(System.IO.Stream,System.Int32,UnityEngine.Vector3@,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.SerializeDelta(System.IO.Stream,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.Serialize(System.IO.Stream,UnityEngine.Vector3)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.SerializeToBytes(UnityEngine.Vector3)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:UnityEngine.Vector3Serialized.SerializeLengthDelimited(System.IO.Stream,UnityEngine.Vector3)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.ResetToPool(UnityEngine.Ray)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.Deserialize(System.Byte[],UnityEngine.Ray@,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.Deserialize(System.IO.Stream,UnityEngine.Ray@,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.DeserializeLengthDelimited(System.IO.Stream,UnityEngine.Ray@,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.DeserializeLength(System.IO.Stream,System.Int32,UnityEngine.Ray@,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.SerializeDelta(System.IO.Stream,UnityEngine.Ray,UnityEngine.Ray)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.Serialize(System.IO.Stream,UnityEngine.Ray)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.SerializeToBytes(UnityEngine.Ray)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:UnityEngine.RaySerialized.SerializeLengthDelimited(System.IO.Stream,UnityEngine.Ray)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:InputMessage.ResetToPool(InputMessage)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:InputMessage.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:InputMessage.CopyTo(InputMessage)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:InputMessage.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:InputMessage.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:InputMessage.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:InputMessage.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:InputMessage.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:InputMessage.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:InputMessage.Deserialize(System.Byte[],InputMessage,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:InputMessage.Deserialize(System.IO.Stream,InputMessage,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:InputMessage.DeserializeLengthDelimited(System.IO.Stream,InputMessage,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:InputMessage.DeserializeLength(System.IO.Stream,System.Int32,InputMessage,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:InputMessage.SerializeDelta(System.IO.Stream,InputMessage,InputMessage)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:InputMessage.Serialize(System.IO.Stream,InputMessage)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:InputMessage.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:InputMessage.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:InputMessage.SerializeToBytes(InputMessage)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:InputMessage.SerializeLengthDelimited(System.IO.Stream,InputMessage)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:PlayerTick.position">
            <summary> Clientside authoritiveness</summary>
        </member>
        <member name="M:PlayerTick.ResetToPool(PlayerTick)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:PlayerTick.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:PlayerTick.CopyTo(PlayerTick)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:PlayerTick.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:PlayerTick.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:PlayerTick.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:PlayerTick.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:PlayerTick.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:PlayerTick.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:PlayerTick.Deserialize(System.Byte[],PlayerTick,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:PlayerTick.Deserialize(System.IO.Stream,PlayerTick,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:PlayerTick.DeserializeLengthDelimited(System.IO.Stream,PlayerTick,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:PlayerTick.DeserializeLength(System.IO.Stream,System.Int32,PlayerTick,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:PlayerTick.SerializeDelta(System.IO.Stream,PlayerTick,PlayerTick)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:PlayerTick.Serialize(System.IO.Stream,PlayerTick)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:PlayerTick.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:PlayerTick.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:PlayerTick.SerializeToBytes(PlayerTick)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:PlayerTick.SerializeLengthDelimited(System.IO.Stream,PlayerTick)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="F:ModelState.waterLevel">
            <summary>
            <para>required bool				ducked				= 1;</para>
            <para>required bool				jumped				= 2;</para>
            <para>required bool				onground			= 3;</para>
            </summary>
        </member>
        <member name="F:ModelState.aiming">
            <summary>
            <para>required bool				sleeping			= 5;</para>
            <para>required bool				sprinting			= 6;</para>
            </summary>
        </member>
        <member name="F:ModelState.lookDir">
            <summary>
            <para>required bool				onLadder			= 8;</para>
            <para>required bool				flying				= 9;</para>
            </summary>
        </member>
        <member name="M:ModelState.ResetToPool(ModelState)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ModelState.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:ModelState.CopyTo(ModelState)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:ModelState.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:ModelState.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ModelState.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ModelState.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:ModelState.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:ModelState.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:ModelState.Deserialize(System.Byte[],ModelState,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:ModelState.Deserialize(System.IO.Stream,ModelState,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ModelState.DeserializeLengthDelimited(System.IO.Stream,ModelState,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ModelState.DeserializeLength(System.IO.Stream,System.Int32,ModelState,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:ModelState.SerializeDelta(System.IO.Stream,ModelState,ModelState)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:ModelState.Serialize(System.IO.Stream,ModelState)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:ModelState.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:ModelState.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:ModelState.SerializeToBytes(ModelState)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:ModelState.SerializeLengthDelimited(System.IO.Stream,ModelState)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="T:EffectData">
            <summary> A generic effect message</summary>
        </member>
        <member name="M:EffectData.ResetToPool(EffectData)">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:EffectData.ResetToPool">
            <summary>Reset the class to its default state</summary>
        </member>
        <member name="M:EffectData.CopyTo(EffectData)">
            <summary>Copy one instance to another</summary>
        </member>
        <member name="M:EffectData.Copy">
            <summary>Reset the class to its default state - class</summary>
        </member>
        <member name="M:EffectData.Deserialize(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:EffectData.DeserializeLengthDelimited(System.IO.Stream)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:EffectData.DeserializeLength(System.IO.Stream,System.Int32)">
            <summary>Helper: create a new instance to deserializing into</summary>
        </member>
        <member name="M:EffectData.Deserialize(System.Byte[])">
            <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        </member>
        <member name="M:EffectData.FromProto(System.IO.Stream,System.Boolean)">
            <summary>Load this value from a proto buffer</summary>
        </member>
        <member name="M:EffectData.Deserialize(System.Byte[],EffectData,System.Boolean)">
            <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        </member>
        <member name="M:EffectData.Deserialize(System.IO.Stream,EffectData,System.Boolean)">
            <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:EffectData.DeserializeLengthDelimited(System.IO.Stream,EffectData,System.Boolean)">
            <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:EffectData.DeserializeLength(System.IO.Stream,System.Int32,EffectData,System.Boolean)">
            <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        </member>
        <member name="M:EffectData.SerializeDelta(System.IO.Stream,EffectData,EffectData)">
            <summary>Serialize the instance into the stream, using the delta from the previous</summary>
        </member>
        <member name="M:EffectData.Serialize(System.IO.Stream,EffectData)">
            <summary>Serialize the instance into the stream</summary>
        </member>
        <member name="M:EffectData.ToProtoBytes">
            <summary>Serialize and return data as a byte array (use this sparingly)</summary>
        </member>
        <member name="M:EffectData.ToProto(System.IO.Stream)">
            <summary>Serialize to a Stream</summary>
        </member>
        <member name="M:EffectData.SerializeToBytes(EffectData)">
            <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        </member>
        <member name="M:EffectData.SerializeLengthDelimited(System.IO.Stream,EffectData)">
            <summary>Helper: Serialize with a varint length prefix</summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadBytes(System.IO.Stream)">
            <summary>
            Reads a length delimited byte array
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.SkipBytes(System.IO.Stream)">
            <summary>
            Skip the next varint length prefixed bytes.
            Alternative to ReadBytes when the data is not of interest.
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteBytes(System.IO.Stream,System.Byte[])">
            <summary>
            Writes length delimited byte array
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadFixed64(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadSFixed64(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadFixed32(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadSFixed32(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteFixed64(System.IO.BinaryWriter,System.UInt64)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteSFixed64(System.IO.BinaryWriter,System.Int64)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteFixed32(System.IO.BinaryWriter,System.UInt32)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteSFixed32(System.IO.BinaryWriter,System.Int32)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadFloat(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadDouble(System.IO.BinaryReader)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteFloat(System.IO.BinaryWriter,System.Single)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteDouble(System.IO.BinaryWriter,System.Double)">
            <summary>
            Only for reference
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.SkipKey(System.IO.Stream,SilentOrbit.ProtocolBuffers.Key)">
            <summary>
            Seek past the value for the previously read key.
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadValueBytes(System.IO.Stream,SilentOrbit.ProtocolBuffers.Key)">
            <summary>
            Read the value for an unknown key as bytes.
            Used to preserve unknown keys during deserialization.
            Requires the message option preserveunknown=true.
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadSkipVarInt(System.IO.Stream)">
            <summary>
            Reads past a varint for an unknown field.
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadZInt32(System.IO.Stream)">
            <summary>
            Zig-zag signed VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteZInt32(System.IO.Stream,System.Int32)">
            <summary>
            Zig-zag signed VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadUInt32(System.IO.Stream)">
            <summary>
            Unsigned VarInt format
            Do not use to read int32, use ReadUint64 for that.
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteUInt32(System.IO.Stream,System.UInt32)">
            <summary>
            Unsigned VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadZInt64(System.IO.Stream)">
            <summary>
            Zig-zag signed VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteZInt64(System.IO.Stream,System.Int64)">
            <summary>
            Zig-zag signed VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.ReadUInt64(System.IO.Stream)">
            <summary>
            Unsigned VarInt format
            </summary>
        </member>
        <member name="M:SilentOrbit.ProtocolBuffers.ProtocolParser.WriteUInt64(System.IO.Stream,System.UInt64)">
            <summary>
            Unsigned VarInt format
            </summary>
        </member>
        <member name="T:SilentOrbit.ProtocolBuffers.ProtocolBufferException">
            <summary>>
             This exception is thrown when badly formatted protocol buffer data is read.
            </summary>
        </member>
        <member name="T:SilentOrbit.ProtocolBuffers.KeyValue">
            <summary>
            Storage of unknown fields
            </summary>
        </member>
    </members>
</doc>
